//1-25 SRM 148 DIV 2 600

import java.util.Hashtable;
import java.util.StringTokenizer;

public class CeyKaps {

    /**
     * Given the actual input, <typed>, return the String of keys the user thought he was inputting
     * after switching the key caps according to <switches>.
     */
    public String decipher(String typed, String[] switches) {
        Hashtable<Character, Character> switching = new Hashtable<>();
        for (char i = 'A'; i <= 'Z'; i ++) {
            switching.put(i, i);
        }

        /*
        Loops through <switches>, switching the key caps indicated in each String (<key1>:<key2>).
        The key to <switching> is the character displayed on the key cap while the value is the true
        character.
         */
        for (int i = 0; i < switches.length; i ++) {
            StringTokenizer tokenizer = new StringTokenizer(switches[i], ":");
            Character key1 = tokenizer.nextToken().charAt(0);
            Character key2 = tokenizer.nextToken().charAt(0);
            Character temp = switching.get(key1);
            switching.replace(key1, switching.get(key2));
            switching.replace(key2, temp);
        }

        /*
        Since the keys in <switching> are the intended characters while the values are the characters
        found in <typed>, <mapping> is generated by looping over all of the keys in <switching> and
        assigning <key> as the value for the <value - 'A'>-th index. The intended character is then
        mapping[actual character - 'A'].
         */
        char[] mapping = new char[26];
        for (char i = 'A'; i <= 'Z'; i ++) {
            mapping[switching.get(i) - 'A'] = i;
        }

        StringBuilder actualMsg = new StringBuilder();
        for (int i = 0; i < typed.length(); i ++) {
            actualMsg.append(mapping[typed.charAt(i) - 'A']);
        }

        return actualMsg.toString();
    }

    public static void main (String[] args) {
        CeyKaps test = new CeyKaps();
        String typed = "IHWSIOTCHEDMYKEYCAPSARWUND";
        String[] switches = {"W:O","W:I"};
        System.out.println(test.decipher(typed, switches));
    }
}
